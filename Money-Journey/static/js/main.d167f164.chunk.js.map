{"version":3,"sources":["Journal.js","Category.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","apps","length","initializeApp","apiKey","process","authDomain","databaseUrl","projectId","storageBucket","messagingSenderId","appId","firestore","auth","Journal","useState","category","setCategory","useForm","register","handleSubmit","showForm","setShowForm","records","setRecords","total","setTotal","editMode","setEditMode","id","createdAt","Date","description","amount","tempData","setTempData","moneyRef","collection","query","orderBy","limitToLast","useCollectionData","idField","data","query2","categories","console","log","useEffect","t","r","map","d","i","JournalRow","onDeleteClick","handleDeleteClick","onEditClick","handleEditClick","handleCloseForm","onSubmit","a","preparedData","parseFloat","doc","set","then","catch","error","alert","add","window","confirm","delete","toDate","Container","Row","Col","Button","variant","onClick","options","getOptionLabel","x","name","getOptionValue","num","onChange","obj","filter","Table","striped","bordered","hover","colSpan","Modal","show","onHide","aria-labelledby","centered","type","placeholder","ref","required","defaultValue","Header","closeButton","Title","Body","htmlFor","format","value","step","min","Footer","props","filteredCategory","c","reverse","Category","categoryRef","CategoryRow","Home","App","Navbar","collapseOnSelect","expand","bg","Brand","href","Toggle","aria-controls","Collapse","Nav","className","Link","NavDropdown","title","Item","Divider","eventKey","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d167f164.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { Button, Modal } from 'react-bootstrap'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Select from 'react-select'\r\nimport { format } from 'date-fns'\r\nimport { BsPlus, BsTrash, BsPencil } from \"react-icons/bs\";\r\nimport { useForm } from \"react-hook-form\"\r\n\r\n// Firebase\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nif (firebase.apps.length === 0) {\r\n  firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseUrl: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  })\r\n}\r\nconst firestore = firebase.firestore()\r\nconst auth = firebase.auth()\r\n\r\nexport default function Journal() {\r\n  const [category, setCategory] = useState()\r\n  const { register, handleSubmit } = useForm()\r\n  const [showForm, setShowForm] = useState(false)\r\n  const [records, setRecords] = useState([])\r\n  const [total, setTotal] = useState(0)\r\n  const [editMode, setEditMode] = useState(false)\r\n  const [tempData, setTempData] = useState({\r\n    id: null,\r\n    createdAt: new Date(),\r\n    description: '',\r\n    amount: null,\r\n    category: null\r\n  })\r\n\r\n  // Firebase stuff\r\n  const moneyRef = firestore.collection('money');\r\n  const query = moneyRef.orderBy('createdAt', 'asc').limitToLast(100);\r\n  const [data] = useCollectionData(query, { idField: 'id' });\r\n\r\n  const categoryRef = firestore.collection('category');\r\n  const query2 = categoryRef.orderBy('num', 'asc').limitToLast(100);\r\n  const [categories] = useCollectionData(query2, { idField: 'id' });\r\n  console.log(\"REACT_APP_PROJECT_ID\", process.env.REACT_APP_PROJECT_ID)\r\n\r\n  // This will be run when 'data' is changed.\r\n  useEffect(() => {\r\n    if (data) { // Guard condition\r\n      let t = 0\r\n      let r = data.map((d, i) => {\r\n        // console.log('useEffect', format(d.createdAt.toDate(), \"yyyy-MM-dd\"))\r\n        t += d.amount\r\n        return (\r\n          <JournalRow\r\n            data={d}\r\n            i={i}\r\n            onDeleteClick={handleDeleteClick}\r\n            onEditClick={handleEditClick}\r\n          />\r\n        )\r\n      })\r\n\r\n      setRecords(r)\r\n      setTotal(t)\r\n    }\r\n  },\r\n    [data])\r\n\r\n\r\n  const handleCategoryFilterChange = (obj) => {\r\n    console.log('filter', obj)\r\n    if (data) { // Guard condition\r\n      let t = 0\r\n      let filteredData = data.filter(d => obj.num == 0 || d.category.num == obj.num)\r\n      let r = filteredData.map((d, i) => {\r\n        console.log('filter', d)\r\n        t += d.amount\r\n        return (\r\n          <JournalRow data={d} i={i} />\r\n        )\r\n      })\r\n\r\n      setRecords(r)\r\n      setTotal(t)\r\n    }\r\n  }\r\n\r\n\r\n  // Handlers for Modal Add Form\r\n  const handleshowForm = () => {\r\n    setShowForm(true)\r\n  }\r\n\r\n  // Handlers for Modal Add Form\r\n  const handleCloseForm = () => {\r\n    setTempData({\r\n      id: null,\r\n      createdAt: new Date(),\r\n      description: '',\r\n      amount: 0,\r\n      category: null\r\n    })\r\n    setCategory({})\r\n    setShowForm(false)\r\n    setEditMode(false)\r\n  }\r\n\r\n  // Handle Add Form submit\r\n  const onSubmit = async (data) => {\r\n    let preparedData = {\r\n      // ...data,\r\n      description: data.description,\r\n      amount: parseFloat(data.amount),\r\n      createdAt: new Date(data.createdAt),\r\n      category: category\r\n    }\r\n    console.log('onSubmit', preparedData)\r\n\r\n\r\n    if (editMode) {\r\n      // Update record\r\n      console.log(\"UPDATING!!!!\", data.id)\r\n      await moneyRef.doc(data.id)\r\n        .set(preparedData)\r\n        .then(() => console.log(\"moneyRef has been set\"))\r\n        .catch((error) => {\r\n          console.error(\"Error: \", error);\r\n          alert(error)\r\n        });\r\n    } else {\r\n      // Add to firebase\r\n      // This is asynchronous operation, \r\n      // JS will continue process later, so we can set \"callback\" function\r\n      // so the callback functions will be called when firebase finishes.\r\n      // Usually, the function is called \"then / error / catch\".\r\n      await moneyRef\r\n        .add(preparedData)\r\n        .then(() => console.log(\"New record has been added.\"))\r\n        .catch((error) => {\r\n          console.error(\"Errror:\", error)\r\n          alert(error)\r\n        })\r\n      // setShowForm(false)\r\n    }\r\n    handleCloseForm()\r\n  }\r\n\r\n  const handleCategoryChange = (obj) => {\r\n    console.log('handleCategoryChange', obj)\r\n    setCategory(obj)\r\n  }\r\n\r\n  const handleDeleteClick = (id) => {\r\n    console.log('handleDeleteClick in Journal', id)\r\n    if (window.confirm(\"Are you sure to delete this record?\"))\r\n      moneyRef.doc(id).delete()\r\n  }\r\n\r\n  const handleEditClick = (data) => {\r\n    let preparedData = {\r\n      id: data.id,\r\n      description: data.description,\r\n      amount: parseFloat(data.amount),\r\n      createdAt: data.createdAt.toDate(),\r\n      category: category\r\n    }\r\n    console.log(\"handleEditClick\", preparedData)\r\n    // expect original data type for data.createdAt is Firebase's timestamp\r\n    // convert to JS Date object and put it to the same field\r\n    // if ('toDate' in data.createdAt) // guard, check wther toDate() is available in createdAt object.\r\n    //   data.createdAt = data.createdAt.toDate()\r\n\r\n    setTempData(preparedData)\r\n    setCategory(data.category)\r\n    setShowForm(true)\r\n    setEditMode(true)\r\n  }\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <h1>Journal</h1>\r\n          <Button variant=\"outline-dark\" onClick={handleshowForm}>\r\n            <BsPlus /> Add\r\n      </Button>\r\n        </Col>\r\n        <Col>\r\n          Category:\r\n          <Select\r\n            options={categories} //.filter(c => c.num != -1)\r\n            getOptionLabel={x => x.name}\r\n            getOptionValue={x => x.num}\r\n            onChange={handleCategoryFilterChange}\r\n          />\r\n        </Col>\r\n\r\n      </Row>\r\n\r\n      <Table striped bordered hover variant=\"dark\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Date</th>\r\n            <th>Description</th>\r\n            <th>Category</th>\r\n            <th>Amount</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {records}\r\n        </tbody>\r\n        <tfooter>\r\n          <td colSpan={5}>\r\n            <h2>Total: {total}</h2>\r\n          </td>\r\n        </tfooter>\r\n      </Table>\r\n\r\n\r\n      <Modal\r\n        show={showForm} onHide={handleCloseForm}\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <input\r\n            type=\"hidden\"\r\n            placeholder=\"ID\"\r\n            ref={register({ required: false })}\r\n            name=\"id\"\r\n            id=\"id\"\r\n            defaultValue={tempData.id}\r\n          />\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              {editMode ? \"Edit Record\" : \"Add New Record\"}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Row>\r\n              <Col>\r\n                <label htmlFor=\"createdAt\">Date</label>\r\n              </Col>\r\n              <Col>\r\n                <input\r\n                  type=\"date\"\r\n                  placeholder=\"Date\"\r\n                  ref={register({ required: true })}\r\n                  name=\"createdAt\"\r\n                  id=\"createdAt\"\r\n                  defaultValue={format(tempData.createdAt, \"yyyy-MM-dd\")}\r\n                />\r\n\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col>\r\n                <label htmlFor=\"category\">Category</label>\r\n              </Col>\r\n              <Col>\r\n                <Select\r\n                  id=\"category\"\r\n                  name=\"category\"\r\n                  value={category}\r\n                  placeholder=\"Category\"\r\n                  options={categories} //.filter(c => c.num != 0)\r\n                  onChange={handleCategoryChange}\r\n                  getOptionLabel={x => x.name}\r\n                  getOptionValue={x => x.num}\r\n                />\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col>\r\n                <label htmlFor=\"description\">Description</label>\r\n              </Col>\r\n              <Col>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Description\"\r\n                  ref={register({ required: true })}\r\n                  name=\"description\"\r\n                  id=\"description\"\r\n                  defaultValue={tempData.description}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <label htmlFor=\"amount\">Amount</label>\r\n              </Col>\r\n              <Col>\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"any\"\r\n                  min=\"0\"\r\n                  placeholder=\"Amount\"\r\n                  ref={register({ required: true })}\r\n                  name=\"amount\"\r\n                  id=\"amount\"\r\n                  defaultValue={tempData.amount}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleCloseForm}>\r\n              Close\r\n          </Button>\r\n            <Button variant={editMode ? \"success\" : \"primary\"} type=\"submit\">\r\n              {editMode ? \"Save Record\" : \"Add Record\"}\r\n            </Button>\r\n          </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    </Container>\r\n  )\r\n}\r\n\r\nfunction JournalRow(props) {\r\n  let d = props.data\r\n  let i = props.i\r\n  // console.log(\"JournalRow\", d)\r\n  const categoryRef = firestore.collection('category');\r\n  const query2 = categoryRef.orderBy('num', 'asc').limitToLast(100);\r\n  const [categories] = useCollectionData(query2, { idField: 'id' });\r\n\r\n  if (categories) {\r\n    let filteredCategory = categories.filter(c => c.num == d.category.num || c.num == -1).reverse()\r\n    return (\r\n      <tr>\r\n        <td>\r\n          <BsTrash onClick={() => props.onDeleteClick(d.id)} />\r\n          <BsPencil onClick={() => props.onEditClick(d)} />\r\n        </td>\r\n        <td>{format(d.createdAt.toDate(), \"yyyy-MM-dd\")}</td>\r\n        <td>{d.description}</td>\r\n        <td>{filteredCategory[0].name}</td>\r\n        <td>{d.amount}</td>\r\n      </tr>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <tr>\r\n        <td>\r\n          <BsTrash onClick={() => props.onDeleteClick(d.id)} />\r\n          <BsPencil onClick={() => props.onEditClick(d)} />\r\n        </td>\r\n        <td>{format(d.createdAt.toDate(), \"yyyy-MM-dd\")}</td>\r\n        <td>{d.description}</td>\r\n        <td>{d.category.name}</td>\r\n        <td>{d.amount}</td>\r\n      </tr>\r\n    )\r\n  }\r\n\r\n}","import { useState, useEffect } from 'react'\r\nimport { Button, Modal } from 'react-bootstrap'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { BsPlus, BsTrash, BsPencil } from \"react-icons/bs\";\r\nimport { useForm } from \"react-hook-form\"\r\n\r\n// Firebase\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nif (firebase.apps.length === 0) {\r\n  firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseUrl: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  })\r\n}\r\nconst firestore = firebase.firestore()\r\nconst auth = firebase.auth()\r\n\r\nexport default function Category() {\r\n  const { register, handleSubmit } = useForm()\r\n  const [showForm, setShowForm] = useState(false)\r\n  const [records, setRecords] = useState([])\r\n  const [editMode, setEditMode] = useState(false)\r\n  const [tempData, setTempData] = useState({\r\n    num:null,\r\n    name: ''\r\n  })\r\n\r\n  // Firebase stuff\r\n  const categoryRef = firestore.collection('category');\r\n  const query = categoryRef.orderBy('num', 'asc').limitToLast(100);\r\n  const [data] = useCollectionData(query, { idField: 'id' });\r\n\r\n\r\n  console.log(\"REACT_APP_PROJECT_ID\", process.env.REACT_APP_PROJECT_ID)\r\n\r\n  // This will be run when 'data' is changed.\r\n  useEffect(() => {\r\n    if (data) { // Guard condition\r\n      let r = data.map((d, i) => {\r\n        return (\r\n          <CategoryRow\r\n            data={d}\r\n            i={i}\r\n            onDeleteClick={handleDeleteClick}\r\n            onEditClick={handleEditClick}\r\n          />\r\n        )\r\n      })\r\n\r\n      setRecords(r)\r\n    }\r\n  },\r\n    [data])\r\n\r\n  // Handlers for Modal Add Form\r\n  const handleshowForm = () => setShowForm(true)\r\n\r\n  // Handlers for Modal Add Form\r\n  const handleCloseForm = () => {\r\n    setTempData({\r\n      num: null,\r\n      name: ''\r\n    })\r\n    setShowForm(false)\r\n    setEditMode(false)\r\n  }\r\n\r\n  // Handle Add Form submit\r\n  const onSubmit = async (data) => {\r\n    let preparedData = {\r\n      // ...data,\r\n      num: data.num,\r\n      name: data.name\r\n    }\r\n    console.log('onSubmit', preparedData)\r\n\r\n\r\n    if (editMode) {\r\n      // Update record\r\n      console.log(\"UPDATING!!!!\", data.id)\r\n      await categoryRef.doc(data.id)\r\n        .set(preparedData)\r\n        .then(() => console.log(\"categoryRef has been set\"))\r\n        .catch((error) => {\r\n          console.error(\"Error: \", error);\r\n          alert(error)\r\n        });\r\n    } else {\r\n      // Add to firebase\r\n      // This is asynchronous operation, \r\n      // JS will continue process later, so we can set \"callback\" function\r\n      // so the callback functions will be called when firebase finishes.\r\n      // Usually, the function is called \"then / error / catch\".\r\n      await categoryRef\r\n        .add(preparedData)\r\n        .then(() => console.log(\"New record has been added.\"))\r\n        .catch((error) => {\r\n          console.error(\"Errror:\", error)\r\n          alert(error)\r\n        })\r\n      // setShowForm(false)\r\n    }\r\n    handleCloseForm()\r\n  }\r\n\r\n  const handleDeleteClick = (id) => {\r\n    console.log('handleDeleteClick in Category', id)\r\n    if (window.confirm(\"Are you sure to delete this record?\"))\r\n      categoryRef.doc(id).delete()\r\n  }\r\n\r\n  const handleEditClick = (data) => {\r\n    let preparedData = {\r\n      num: data.num,\r\n      name: data.name\r\n    }\r\n    console.log(\"handleEditClick\", preparedData)\r\n    // expect original data type for data.createdAt is Firebase's timestamp\r\n    // convert to JS Date object and put it to the same field\r\n    // if ('toDate' in data.createdAt) // guard, check wther toDate() is available in createdAt object.\r\n    //   data.createdAt = data.createdAt.toDate()\r\n\r\n    setTempData(preparedData)\r\n    setShowForm(true)\r\n    setEditMode(true)\r\n  }\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <h1>Category</h1>\r\n          <Button variant=\"outline-dark\" onClick={handleshowForm}>\r\n            <BsPlus /> Add\r\n      </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Table striped bordered hover variant=\"dark\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>id</th>\r\n            <th>category</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {records}\r\n        </tbody>\r\n      </Table>\r\n\r\n\r\n      <Modal\r\n        show={showForm} onHide={handleCloseForm}\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <input\r\n            type=\"hidden\"\r\n            placeholder=\"ID\"\r\n            ref={register({ required: false })}\r\n            name=\"id\"\r\n            id=\"id\"\r\n            defaultValue={tempData.id}\r\n          />\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              {editMode ? \"Edit Category\" : \"Add New Category\"}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n          <Row>\r\n              <Col>\r\n                <label htmlFor=\"num\">id</label>\r\n              </Col>\r\n              <Col>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"id\"\r\n                  ref={register({ required: true })}\r\n                  name=\"num\"\r\n                  id=\"num\"\r\n                  defaultValue={tempData.num}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <label htmlFor=\"name\">category</label>\r\n              </Col>\r\n              <Col>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"category\"\r\n                  ref={register({ required: true })}\r\n                  name=\"name\"\r\n                  id=\"name\"\r\n                  defaultValue={tempData.name}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleCloseForm}>\r\n              Close\r\n          </Button>\r\n            <Button variant={editMode ? \"success\" : \"primary\"} type=\"submit\">\r\n              {editMode ? \"Save Category\" : \"Add Category\"}\r\n            </Button>\r\n          </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    </Container>\r\n  )\r\n}\r\n\r\nfunction CategoryRow(props) {\r\n  let d = props.data\r\n  let i = props.i\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <BsTrash onClick={() => props.onDeleteClick(d.id)} />\r\n        <BsPencil onClick={() => props.onEditClick(d)} />\r\n      </td>\r\n      <td>{d.num}</td>\r\n      <td>{d.name}</td>\r\n    </tr>\r\n  )\r\n}","import 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container,\n   Navbar, Nav, NavDropdown,\n } from 'react-bootstrap';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport Journal from './Journal'\nimport Category from './Category'\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"/\">Money Journey</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/journal\">Journal</Nav.Link>\n            <Nav.Link href=\"/category\">Category</Nav.Link>\n            <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n          <Nav>\n            <Nav.Link href=\"#deets\">More deets</Nav.Link>\n            <Nav.Link eventKey={2} href=\"#memes\">\n              Sign Out\n      </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <Switch>\n        <Route path=\"/journal\">\n          <Journal />\n        </Route>\n        <Route path=\"/category\">\n          <Category />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nfunction Home() {\n  return (\n    <h1>Home</h1>\n  )\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}